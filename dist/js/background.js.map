{"version":3,"file":"js/background.js","sources":["webpack:///webpack/bootstrap","webpack:///./src/background/index.js","webpack:///./src/constants/proxyModes.js","webpack:///./src/models/Tab.js","webpack:///./src/models/TabCollection.js","webpack:///./src/utils/getHost.js"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"asserts\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/background/index.js\");\n","// map of common domain suffix.\nimport { PROXY_MODES } from '../constants/proxyModes';\nimport getHost from '../utils/getHost';\nimport Tab from '../models/Tab';\nimport TabCollection from '../models/TabCollection';\nconst tabCollection = new TabCollection();\nchrome.tabs.onCreated.addListener(({\n  id\n}) => {\n  const tab = new Tab(id);\n  tabCollection.addTab(tab);\n});\nchrome.tabs.onRemoved.addListener(tabId => {\n  tabCollection.removeTab(tabId);\n});\nchrome.tabs.onActivated.addListener(({\n  id\n}) => {\n  tabCollection.activeTab(id);\n});\nchrome.webNavigation.onBeforeNavigate.addListener(details => {\n  if (details.frameId === 0) {\n    tabCollection.getTab(details.tabId).resetHosts();\n  }\n});\nchrome.webRequest.onBeforeRequest.addListener(details => {\n  const url = details.url,\n        tabId = details.tabId;\n  tabCollection.getTab(tabId).addHost(getHost(url));\n}, {\n  urls: ['http://*/*', 'https://*/*']\n});\n/**\n * get proxy mode stored in loacal storage\n * @returns {Promise}\n */\n\nfunction getProxyMode() {\n  return new Promise(function (resolve, reject) {\n    chrome.storage.local.get(PROXY_MODE, function (obj) {\n      resolve(obj[PROXY_MODE] || PROXY_MODES[0].name);\n    });\n  });\n}\n/**\n * get proxy mode stored in loacal storage\n * @returns {Promise}\n */\n\n\nfunction setProxyMode(mode) {\n  return new Promise(function (resolve, reject) {\n    chrome.storage.local.set({\n      PROXY_MODE: mode\n    }, function (obj) {\n      generateProxySettingObj(mode).then(function (settingObj) {\n        chrome.proxy.settings.set(settingObj, function () {\n          resolve(mode);\n        });\n      });\n    });\n  });\n}\n/**\n * get proxy mode stored in loacal storage\n * @returns {Promise}\n */\n\n\nfunction saveProxyServersAndRules(servers, blackList, whiteList) {\n  return Promise.all([saveProxyServers(servers), saveProxyRules(blackList, whiteList)]).then(function () {\n    // update black(white) list and proxy server\n    // in pac script by resetting the proxy mode.\n    getProxyMode().then(function (mode) {\n      setProxyMode(mode);\n    });\n  });\n}\n/**\n * function for saving proxy servers which returns a promise object.\n * @param {array} rules list of proxy rules\n */\n\n\nfunction saveProxyRules(blackList, whiteList) {\n  return new Promise(function (resolve, reject) {\n    chrome.storage.sync.set({\n      BLACK_LIST: blackList,\n      WHITE_LIST: whiteList\n    }, function () {\n      resolve({\n        BLACK_LIST: blackList,\n        WHITE_LIST: whiteList\n      });\n    });\n  });\n}\n/**\n * function for saving proxy servers which returns a promise object.\n * @param {array} servers list of proxy servers\n */\n\n\nfunction saveProxyServers(servers) {\n  return new Promise(function (resolve, reject) {\n    chrome.storage.local.set({\n      PROXY_SERVERS: servers\n    }, function () {\n      resolve();\n    });\n  });\n}\n/**\n * function for getting proxy_rules which returns a promise object.\n * @returns {Promise} resolve with proxy rules array\n */\n\n\nfunction getProxyRules() {\n  return new Promise(function (resolve, reject) {\n    chrome.storage.sync.get([BLACK_LIST, WHITE_LIST], function (obj) {\n      if (chrome.runtime.lastError) {\n        reject(chrome.runtime.lastError);\n      } else {\n        resolve(obj);\n      }\n    });\n  });\n}\n/**\n * function for getting proxy_servers which returns a promise object.\n * @returns {Promise} resolve with proxy servers array\n */\n\n\nfunction getProxyServers() {\n  return new Promise(function (resolve, reject) {\n    chrome.storage.local.get(PROXY_SERVERS, function (obj) {\n      if (chrome.runtime.lastError) {\n        reject(chrome.runtime.lastError);\n      } else {\n        resolve(obj[PROXY_SERVERS]);\n      }\n    });\n  });\n}\n/**\n * function for update black & white list and reset pac script if need.\n * @param {array} blackList\n * @param {array} whiteList\n * @param {string} mode proxy mode\n */\n\n\nfunction updateBlackWhiteList(blackList, whiteList, mode) {\n  saveProxyRules(blackList, whiteList).then(function () {\n    if (mode === BLACK_LIST || mode === WHITE_LIST) {\n      // if in black(white) list mode\n      // we need to reset the pac script.\n      setProxyMode(mode);\n    }\n  });\n}\n/**\n * function for generate proxy setting object.\n * @param {string} mode proxy mode\n * @returns {Object} proxy setting object\n */\n\n\nfunction generateProxySettingObj(mode) {\n  return new Promise(function (resolve, reject) {\n    let settingObj = {\n      scope: 'regular',\n      value: {}\n    };\n\n    switch (mode) {\n      case PROXY_MODES[0].name:\n        settingObj.value.mode = 'system';\n        resolve(settingObj);\n        break;\n\n      case PROXY_MODES[1].name:\n        settingObj.value.mode = 'direct';\n        resolve(settingObj);\n        break;\n\n      case PROXY_MODES[2].name:\n        generatePacWhite().then(function (pac) {\n          settingObj.value.mode = 'pac_script';\n          settingObj.value.pacScript = {\n            data: pac\n          };\n          resolve(settingObj);\n        });\n        break;\n\n      case PROXY_MODES[3].name:\n        generatePacBlack().then(function (pac) {\n          settingObj.value.mode = 'pac_script';\n          settingObj.value.pacScript = {\n            data: pac\n          };\n          resolve(settingObj);\n        });\n        break;\n    }\n  });\n}","export const DIRECT = 'DIRECT';\nexport const SYSTEM = 'SYSTEM';\nexport const BLACK_LIST = 'BLACK_LIST';\nexport const WHITE_LIST = 'WHITE_LIST';\nexport const PROXY_MODES = [{\n  name: DIRECT,\n  title: chrome.i18n.getMessage('mode_direct'),\n  desc: chrome.i18n.getMessage('mode_direct_desc')\n}, {\n  name: SYSTEM,\n  title: chrome.i18n.getMessage('mode_system'),\n  desc: chrome.i18n.getMessage('mode_system_desc')\n}, {\n  name: BLACK_LIST,\n  title: chrome.i18n.getMessage('mode_black_list'),\n  desc: chrome.i18n.getMessage('mode_black_list_desc')\n}, {\n  name: WHITE_LIST,\n  title: chrome.i18n.getMessage('mode_white_list'),\n  desc: chrome.i18n.getMessage('mode_white_list_desc')\n}];\nexport const PROXY_MODE_MAP = {};\nPROXY_MODES.forEach(d => {\n  PROXY_MODE_MAP[d.name] = d;\n});","class Tab {\n  constructor(id) {\n    this.id = id;\n    this.hosts = new Set();\n  }\n\n  getHosts() {\n    return Array.from(this.hosts);\n  }\n\n  addHost(host) {\n    this.hosts.add(host);\n  }\n\n  resetHosts() {\n    this.hosts = new Set();\n  }\n\n}\n\nexport default Tab;","import Tab from './Tab';\n\nclass TabCollection {\n  constructor() {\n    this.tabs = new Map();\n    this.currentTab = null;\n  }\n\n  activeTab(tabId) {\n    if (this.tabs.has(tabId)) {\n      this.currentTab = this.tabs.get(tabId);\n    } else {\n      throw Error(`cant not find tab: ${tabId}`);\n    }\n  }\n\n  getTab(tabId) {\n    return this.tabs.get(tabId);\n  }\n\n  addTab(tab) {\n    if (!(tab instanceof Tab)) {\n      throw Error('tab must be instance of Tab');\n    }\n\n    this.tabs.add(tab.id, tab);\n  }\n\n  removeTab(tabId) {\n    this.tabs.delete(tabId);\n  }\n\n}\n\nexport default TabCollection;","export default (str => {\n  const url = new URL(str);\n  return url.hostname;\n});"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACljNA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACpBA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClCA;AACA;AACA;AACA;;;;A","sourceRoot":""}